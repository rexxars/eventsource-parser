name: Test
on:
  push:
  workflow_dispatch:

jobs:
  testNode:
    name: 'Test: Node.js ${{ matrix.node-version }}'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: ['18.x', '20.x', '22.x']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node modules
        id: cache-node-modules
        uses: actions/cache@v4
        env:
          cache-name: cache-node-modules
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ env.cache-name }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-modules-${{ env.cache-name }}--node-${{ matrix.node-version }}-
            ${{ runner.os }}-modules-${{ env.cache-name }}
            ${{ runner.os }}-modules-
            ${{ runner.os }}-
      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci
      - name: Run tests
        run: npm run test:node

  # Deno currently fails because of vitest incompatibility
  # testDeno:
  #   name: 'Test: Deno'
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: denoland/setup-deno@v1
  #       with:
  #         deno-version: v1.x
  #     - name: Run tests
  #       run: npm run test:deno

  # Bun currently fails because of broken/missing TextDecoder
  # testBun:
  #   name: 'Test: Bun'
  #   timeout-minutes: 15
  #   runs-on: ubuntu-latest
  #   continue-on-error: true
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: oven-sh/setup-bun@v1
  #       with:
  #         bun-version: latest
  #     - name: Install Dependencies
  #       run: bun install --frozen-lockfile
  #     - name: Run tests
  #       run: npm run test:bun
